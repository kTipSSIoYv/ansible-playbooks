---
- hosts: localhost  # put localhost.  We are processing against aws
  connection: local  # put local.  We are processing against aws
  gather_facts: False  # don't gather facts against localhost
  #vars:
    #existing_sg_list: []
    #rules: "TCP,22,22,10.10.10.0/24\nTCP,8080,8080,0.0.0.0/0"
    #vm_id: "i-1234"
    #cloud_region: "east-us"
    #vpc_id: "vpc-1234"
    #sg_name: "testing-sg"

  tasks:
  
  - name: Gather information about a particular instance using ID
    amazon.aws.ec2_instance_info:
      region: "{{ cloud_region }}"
      instance_ids:
        - "{{ vm_id }}"
    register: ec2_info
    #when: sg_create_new == '1'

    - meta: end_play
    when: sg_create_new == '0'

  - name: Print EC2 Info
    debug:
      #msg: "EC2 INFO: {{ ec2_info.instances[0].security_groups[0].group_id }}"
      msg:
        - "EC2 INFO cloud_region: {{ cloud_region }}"
        - "EC2 INFO instance_id: {{ vm_id }}"            
        - "EC2 INFO vpc_id: {{ vpc_id }}"
        - "EC2 INFO sg_name: {{ sg_name }}"
        - "EC2 INFO sg_ssh_cidr: {{ sg_ssh_cidr }}"        
    #when: sg_create_new == '1'

  - name: create ec2 security group
    # create a security group for the vpc
    amazon.aws.ec2_group:
      vpc_id: "{{ vpc_id }}"
      region: "{{ cloud_region }}"
      state: "present"
      name: "{{ sg_name }}"
      description: "Security Group {{ sg_name }}"
      tags:
        Name: "{{ sg_name }}"
      rules: >-
        {{
          sg_rules.splitlines()
          | map('split', ',')
          | json_query("[*].{
            proto: [0],
            from_port: [1],
            to_port: [2],
            cidr_ip: [3]
          }")
        }}
    when: (sg_rules is defined and sg_create_rules == '1' and sg_create_new == '1')
    register: security_group_results

  - name: update Ec2 security group
    # update security group for the vpc
    amazon.aws.ec2_group:
      vpc_id: "{{ vpc_id }}"
      region: "{{ cloud_region }}"
      state: "present"
      name: "{{ sg_name }}"
      description: "Security Group {[ sg_name }}"
      tags:
        Name: "{{ sg_name }}"
      purge_rules: no
      rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ sg_ssh_cidr }}"
    when: sg_create_new == '1'

  - meta: end_play
    when: sg_create_new == '0'

  - name: "Generate SG list"
    set_fact:
      new_sg: "{{ [ security_group_results.group_id  ] }}"    

  - name: Print new SG ID
    debug:
       msg: "EC2 NEW SG ID: {{ new_sg }}"    

  - name: "Attach SG"
    amazon.aws.ec2_instance:
      region: "{{ cloud_region }}"
      instance_ids:
        - "{{ vm_id }}"
      state: running
      security_groups: "{{ new_sg }}"    
